---
import Layout from "@/layouts/Layout.astro";
import MinNav from "@/components/sections/MinNav.astro";
import Footer from "@/components/sections/Footer.astro";
import Section from "@/components/Section.astro";

import { Github, Rss } from "simple-icons-astro";

import { basics, projects } from "@cv";
const { name, label } = basics;
---

<Layout title=`Proyectos de ${name} - ${label}`>
  <Section>
    <MinNav />
    <main>
      <h2 class="title-section">
        Bodega de Scripts
        <span>Desarrollo Web | Marketing | No-Code</span>
      </h2>

      <article class="text-description">
        <p>
          Los pequeños detalles marcan una gran diferencia. Con los años he
          aprendido a fijarme en esos detalles. Nunca dejo de aprender. He aquí
          varias recopilaciones a lo largo de este camino.
        </p>
        <div class="box-left">
          <a href="#" class="rss-btn">
            <Rss class="w-3 h-3" />
            Suscríbete
          </a>
        </div>
      </article>

      <ul class="prj-container">
        {
          projects.map(
            ({ url, description, highlights, name, isActive, github }) => {
              return (
                <li class="items">
                  <article class="item" transition:animate="slide">
                    <header>
                      <h3>
                        <a
                          href={url}
                          title={`Ver el proyecto ${name}`}
                          target="_blank"
                        >
                          {name}
                        </a>
                        {isActive && <span>•</span>}
                        {github && (
                          <a
                            class="github-code-link"
                            href={github}
                            target="_blank"
                            title={`Ver código fuente del proyecto ${name}`}
                          >
                            <Github class="w-4 h-4" />
                          </a>
                        )}
                      </h3>
                      <p>{description}</p>
                    </header>
                    <footer>
                      <ul>
                        {highlights.map((highlight) => {
                          return <span>{highlight}</span>;
                        })}
                      </ul>
                    </footer>
                  </article>
                </li>
              );
            }
          )
        }
      </ul>
      
      <Footer />
    </main>
  </Section>
</Layout>

<style>
  main {
    padding: 0rem 0rem 2rem;
    margin: auto;
    width: 100%;
  }

  .title-section {
    margin-bottom: 1.5rem;
    font-weight: 900;
    line-height: 1.5;
    letter-spacing: -0.025em;
    font-size: 24px;
    text-transform: uppercase;
    background-color: #1e252c;
    color: #f8fafb;
    width: fit-content;
    padding: 1px 32px 1px 16px;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .title-section span {
    font-size: 1rem;
    font-weight: 100;
    letter-spacing: 0.05em;
  }

  .title-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .title-header {
    text-wrap: pretty;
  }
  .title-header p {
    font-size: 1rem;
    line-height: 0.7;
    color: rgba(30, 37, 44, 60%);
  }
  .title-black {
    font-weight: 900;
    font-size: 3.5rem;
    letter-spacing: -0.125rem;
  }

  .title-footer img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 215px;
  }
  .text-description {
    border: 1px solid rgba(30, 37, 44, 10%);
    padding: 1rem;
    margin-bottom: 24px;
  }

  .text-description p {
    font-size: 0.75rem;
    text-wrap: pretty;
    font-weight: 300;
    color: rgba(30, 37, 44, 80%);
  }

  .box-left {
    display: flex;
    gap: 0.25rem;
    justify-content: end;
    font-size: 0.625rem;
  }

  .rss-btn {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 4px;
    background: rgba(30, 37, 44, 8%);
    color: rgba(30, 37, 44, 60%);
  }

  .prj-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 0.5rem;
    margin-bottom: 4.5rem;
  }

  .item {
    border: 1px solid rgba(30, 37, 44, 10%);
    border-radius: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    padding: 1rem;
    height: 100%;
  }

  .item header {
    flex: 1;
  }

  .item h3 {
    /* margin-bottom: 4px; */
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .item h3 span {
    color: rgb(0, 188, 47);
  }

  .item a {
    font-size: 16px;
    font-weight: 600;
    color: rgba(30, 37, 44, 90%);
  }

  .item a:hover {
    text-decoration: underline;
  }

  .item p {
    font-size: 12px;
    line-height: 1.2;
  }

  .item footer {
    /* display: flex;
    flex-wrap: wrap;
    gap: 0.25rem; */
    padding: -0.25rem;
  }

  .item footer ul {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
  }

  .item footer span {
    border-radius: 4px;
    background: #eee;
    color: rgba(30, 37, 44, 80%);
    font-size: 10px;
    padding: 2px 4px;
    width: fit-content;
  }

  .github-code-link {
    margin-left: 0.3125rem;
  }

  @media (width <= 700px) {
    main {
      padding: 2rem;
    }
    .title-section {
      flex-wrap: wrap;
      line-height: 0.9;
      padding: 4px 32px 4px 16px;
      letter-spacing: 0.025em;
    }
    .title-section span {
      letter-spacing: 0.025em;
      text-wrap: pretty;
      line-height: 1;
      font-size: 12px;
    }

    .title-container {
      flex-direction: column-reverse;
      text-align: center;
      margin-bottom: 72px;
    }
    .title-black {
      font-size: 36px;
    }
    .title-header p {
      line-height: 1;
      font-size: 14px;
    }
    .prj-container {
      margin-inline: 0px;
    }

    .item {
      border: none;
      box-shadow: 0 1px 1px #f2f2f2;
      padding: 0 0 16px 0;
    }
  }
</style>
