---
import Section from "../Section.astro";
import { basics } from "@landing";
const { name, label, image, location, profiles, phone, email } = basics;
const { city, region } = location;
import { Github, Linkedin, X, Instagram, Threads } from "simple-icons-astro";
import WorldMap from "@/icons/WorldMap.astro";
import Mail from "@/icons/Mail.astro";
import Phone from "@/icons/Phone.astro";
import UserPin from "@/icons/User-pin.astro";
const SOCIAL_ICONS: Record<string, any> = {
  Github,
  Linkedin,
  X,
  Instagram,
  Threads,
};
const linkedInfo = profiles.find(({ network }) => network === "Linkedin");
const linkedUrl = linkedInfo?.url;
const XInfo = profiles.find(({ network }) => network === "X");
const XUrl = XInfo?.url;
const instagramInfo = profiles.find(({ network }) => network === "Instagram");
const instagramUrl = instagramInfo?.url;
const githubInfo = profiles.find(({ network }) => network === "Github");
const githubUrl = githubInfo?.url;
const threadsInfo = profiles.find(({ network }) => network === "Threads");
const threadsUrl = threadsInfo?.url;

const printInfo = [
  email,
  phone,
  linkedUrl,
  githubUrl,
  XUrl,
  instagramUrl,
  threadsUrl,
]
  .filter(Boolean)
  .join(" • ");
---

<Section>
  <article class="hero-section flex items-center mx-auto mb-0 mt-4 gap-6">
    <figure class="hero-image flex flex-col items-center justify-center">
      <img src={image} alt={name} />
    </figure>

    <div class="hero-info flex flex-col gap-2">
      <h1 class="title">
        {name}
      </h1>

      <h2 class="subtitle">
        {label}
      </h2>

      <span class="ubicacion flex items-center gap-2">
        <WorldMap />
        {city}, {region}
      </span>

      <footer class="print">
        {printInfo}
      </footer>

      <footer class="no-print">
        {
          email && (
            <a
              href={`mailto:${email}`}
              title={`Enviar un correo electrónico a ${name} al correo ${email}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Mail />
            </a>
          )
        }
        {
          phone && (
            <a
              href={`Tel:${phone}`}
              title={`Llamar por teléfono a ${name} al número ${phone}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Phone />
            </a>
          )
        }
        {
          profiles.map(({ network, url, username }) => {
            const Icon = SOCIAL_ICONS[network];
            if (!Icon) {
              console.error(`Icono no encontrado para la red: ${network}`);
              return null;
            }
            return (
              <a
                href={url}
                title={`Visitar el perfil de ${name} en ${network}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <Icon class="w-4 h-4" />
              </a>
            );
          })
        }
        {
          (
            <a
              href="/resume"
              title={`Ver currículum de ${name}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <UserPin />
            </a>
          )
        }
      </footer>
    </div>
  </article>
</Section>

<style>
  .hero-section {
    font-family: var(--heading-font);
    color: rgb(var(--dark), 1);
    max-width: 700px;
  }
  .hero-image {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 140px;
  }
  .title {
    font-size: clamp(24px, 2.5vw, 40px);
    font-weight: 800;
    letter-spacing: -0.025em;
    list-style: 0.85;
  }
  .subtitle {
    font-weight: 300;
    font-size: clamp(16px, 1.5vw, 18px);
    letter-spacing: 0.025em;
    text-wrap: balance;
  }
  .ubicacion {
    color: rgb(var(--dark), 0.55);
    font-weight: 300;
    font-size: 12px;
  }
  footer {
    display: flex;
    gap: 0.5rem;
    font-size: 10px;
  }
  footer a {
    color: rgb(var(--dark), 0.8);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid rgb(var(--dark), 0.1);
    border-radius: 6px;
    padding: 4px;
    height: 2rem;
    width: 2rem;
    transition: all 0.2s ease;
  }
  footer a:hover {
    background-color: rgb(var(--accent-50), 0.05);
    border: 1px solid rgb(var(--accent-50), 0.08);
    color: rgb(var(--accent-50));
  }

  @media (width <= 700px) {
    .hero-section {
      flex-direction: column;
    }
    .hero-info {
      text-align: center;
      place-items: center;
    }
  }
</style>
