---
import Section from "../Section.astro";

import { basics } from "@cv";
const { name, label, image, location, profiles, phone, email } = basics;
const { city, region } = location;

import { Github, Linkedin, X } from "simple-icons-astro";
import WorldMap from "@/icons/WorldMap.astro";
import Mail from "@/icons/Mail.astro";
import Phone from "@/icons/Phone.astro";

const SOCIAL_ICONS: Record<string, any> = {
  Github,
  Linkedin,
  X,
};

const linkedInfo = profiles.find(({ network }) => network === "Linkedin");
const linkedUrl = linkedInfo?.url;

const printInfo = [email, phone, linkedUrl].filter(Boolean).join(" • ");
---

<Section>
  <div class="hero-container">
    <div class="hero-info">
      <h1>{name}</h1>
      <h2>{label}</h2>

      <span>
        <WorldMap />
        {city}, {region}
      </span>
      <footer class="print">
        {printInfo}
      </footer>
      <footer class="no-print">
        {
          email && (
            <a
              href={`maito:${email}`}
              title={`Enviar un correo electronico a ${name} al correo ${email}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Mail />
            </a>
          )
        }
        {
          phone && (
            <a
              href={`tel:${email}`}
              title={`Llamar por teléfono a ${name} al número ${phone}`}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Phone />
            </a>
          )
        }
        {
          profiles.map(({ network, url, username }) => {
            const Icon = SOCIAL_ICONS[network];

            if (!Icon) {
              console.error(`Icono no encontrado para la red: ${network}`);
              return null;
            }

            return (
              <a
                href={url}
                title={`Visitar el perfil de ${name} en ${network}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <Icon class="w-4 h-4" />
              </a>
            );
          })
        }
      </footer>
    </div>
    <figure>
      <img src={image} alt={name} />
    </figure>
  </div>
</Section>

<style>
  .hero-container {
    /* border: 1px solid rebeccapurple; */
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
  }

  .hero-info {
    display: flex;
    flex-direction: column;
  }

  h1 {
    font-size: 24px;
    font-weight: 700;
  }

  h2 {
    font-size: 14px;
    font-weight: 400;
    text-wrap: balance;
    color: rgb(68, 68, 68, 1);
    font-family: "Inconsolata Variable", monospace;
  }

  img {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    width: 260px;
    border-radius: 6px;
  }

  span {
    color: #666;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 13.6px;
    letter-spacing: -0.05rem;
  }

  footer {
    display: flex;
    gap: 4px;
    margin-top: 8px;
    color: #555;
    font-size: 0.65rem;
  }

  footer a {
    color: #777;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 1px solid #eee;
    border-radius: 6px;
    padding: 4px;
    height: 32px;
    width: 32px;
    transition: all 0.3s ease;
  }

  footer a:hover {
    background-color: #eee;
    border: 1px solid #ddd;
  }

  @media (width <= 700px) {
    .hero-container {
      flex-direction: column-reverse;
    }

    .hero-info {
      justify-content: center;
      align-items: center;
      padding-right: 0;
      text-align: center;
    }

    figure {
      display: flex;
      justify-content: center;
      align-items: center;
      margin: 0 auto;
    }

    h2 {
      text-wrap: balance;
    }

    figure {
      margin: 0 auto;
    }

    img {
      width: 175px;
    }
  }
</style>
